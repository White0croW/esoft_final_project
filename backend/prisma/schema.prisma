generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AppointmentStatus {
  NEW
  CONFIRMED
  DONE
  CANCELED
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  phone        String?
  createdAt    DateTime      @default(now()) @map("created_at")

  appointments Appointment[]

  @@map("users")
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  duration     Int           // в минутах
  price        Float
  createdAt    DateTime      @default(now()) @map("created_at")

  appointments Appointment[]

  @@map("services")
}

model Barbershop {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  lat       Float
  lon       Float
  createdAt DateTime  @default(now()) @map("created_at")

  barbers   Barber[]

  @@map("barbershops")
}

model Barber {
  id             Int              @id @default(autoincrement())
  name           String
  specialization String?
  rating         Float            @default(0.0)
  createdAt      DateTime         @default(now()) @map("created_at")

  barbershopId   Int?
  barbershop     Barbershop?      @relation(fields: [barbershopId], references: [id])

  appointments   Appointment[]

  @@map("barbers")
}

model Appointment {
  id         Int               @id @default(autoincrement())
  userId     Int
  serviceId  Int
  barberId   Int
  date       DateTime
  time       String            // "HH:MM"
  status     AppointmentStatus @default(NEW)
  createdAt  DateTime          @default(now()) @map("created_at")

  user      User    @relation(fields: [userId], references: [id])
  service   Service @relation(fields: [serviceId], references: [id])
  barber    Barber  @relation(fields: [barberId], references: [id])

  @@map("appointments")
}

model Portfolio {
  id          Int      @id @default(autoincrement())
  imageUrl    String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("portfolio")
}
